#!/bin/bash

# Fair warning

echo "This script is NOT MEANT to be run MULTIPLE TIMES."
echo "(it should be safe, but it will crash)"

# Installs postgresql

echo "Installing required debian packages..."

sudo apt-get install php-pgsql
# You may need php5.6-pgsql, php7-pgsql or simply php5-pgsql
sudo apt-get install postgresql postgresql-doc postgresql-contrib




# We use a "here document" below, because it is convenient

sudo su postgres <<EOSU

echo "Creating databases..."
psql -c "CREATE USER give2peer WITH PASSWORD 'pass42peer';"
psql -c "CREATE DATABASE give2peer      OWNER give2peer;"
psql -c "CREATE DATABASE give2peer_test OWNER give2peer;"

echo "Setting up the pgSQL extensions we need..."
psql -d give2peer      -c "CREATE EXTENSION cube;"
psql -d give2peer      -c "CREATE EXTENSION earthdistance;"
psql -d give2peer_test -c "CREATE EXTENSION cube;"
psql -d give2peer_test -c "CREATE EXTENSION earthdistance;"

EOSU


# Create a system user that pgsql needs for peer auth (by default)
# The --gecos option is to disable the shell interactivity (for travis)

echo "Creating give2peer system user..."
sudo adduser give2peer --no-create-home --disabled-password --gecos ""


# Now let's see if Doctrine can do the rest

echo "Creating database schema..."
./app/console doctrine:schema:create
./app/console doctrine:schema:create --env=test

echo "Done !"
