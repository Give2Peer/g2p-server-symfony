

# REMEMBER TO EDIT THE FIREWALL IN `app/config/security.yml` TOO

# Now that we have an API documentation generator, I'm not sure that this YAML
# configuration is the best way to go. We might move to annotations someday.


## HOME ########################################################################

# HOME
# We show the generated documentation and sandbox.
give2peer_home:
    path:     /
    defaults: { _controller: Give2PeerBundle:Rest:index }

# Is out of the firewall.
# This should return info about the server so that clients may use it to choose
# configure themselves, like :
# - version number
# - news ?
give2peer_hello:
    path:     /hello
    defaults: { _controller: Give2PeerBundle:Rest:hello, _format: json }
    methods:  [GET]

# Like 'hello', but to check if credentials pass through the firewall.
# Checks :
# - credentials given in HTTPAuth
# - that the server works
# - nothing else for now
give2peer_authenticate:
    path:     /check
    defaults: { _controller: Give2PeerBundle:Rest:check, _format: json }
    methods:  [GET]


## SYSTEM ######################################################################

give2peer_cron_monkey:
    path:     /cron/monkey
    defaults: { _controller: Give2PeerBundle:Cron:monkey }
    methods:  [GET]

give2peer_cron_daily:
    path:     /cron/daily
    defaults: { _controller: Give2PeerBundle:Cron:daily }
    methods:  [GET]


## USERS #######################################################################

# Private profile of current user (may be changed to GET /user)
give2peer_profile:
    path:     /user
    defaults: { _controller: Give2PeerBundle:Rest/User:privateRead, _format: json }
    methods:  [GET]

# We had `/register` for a while but...
# I believe this is the correct REST route to create a new user
give2peer_register:
    path:     /user
    defaults: { _controller: Give2PeerBundle:Rest/User:register, _format: json }
    methods:  [POST]


# Public profile of user described by its `id`.
give2peer_get_user:
    path:     /user/{id}
    defaults: { _controller: Give2PeerBundle:Rest/User:publicRead, _format: json }
    methods:  [GET]

# Kind of a syndication of the three routes below
# Accepts :
# - email
# - username
# - password
give2peer_update_user:
    path:     /user/{id}
    defaults: { _controller: Give2PeerBundle:Rest/User:edit, _format: json }
    methods:  [POST]

give2peer_update_user_email:
    path:     /user/{id}/email
    defaults: { _controller: Give2PeerBundle:Rest/User:changeEmail, _format: json }
    methods:  [POST]

give2peer_update_user_username:
    path:     /user/{id}/username
    defaults: { _controller: Give2PeerBundle:Rest/User:changeUsername, _format: json }
    methods:  [POST]

give2peer_update_user_password:
    path:     /user/{id}/password
    defaults: { _controller: Give2PeerBundle:Rest/User:changePassword, _format: json }
    methods:  [POST]


## ITEMS #######################################################################

give2peer_item_create:
    path:     /item
    defaults: { _controller: Give2PeerBundle:Rest/Item:itemCreate, _format: json }
    methods:  [POST]

give2peer_item_read:
    path:     /item/{id}
    defaults: { _controller: Give2PeerBundle:Rest/Item:itemRead, _format: json }
    methods:  [GET]
    requirements:
        id:   \d+

give2peer_item_delete:
    path:     /item/{id}
    defaults: { _controller: Give2PeerBundle:Rest/Item:itemDelete, _format: json }
    methods:  [DELETE]
    requirements:
        id:   \d+

give2peer_picture_upload:
    path:     /item/{id}/picture
    defaults: { _controller: Give2PeerBundle:Rest/Item:itemPictureUpload, _format: json }
    methods:  [POST]
    requirements:
        id:   \d+

# There are other GET parameters allowed, to filter and paginate the request
give2peer_items_around:
    path:     /items/around/{latitude}/{longitude}
    defaults: { _controller: Give2PeerBundle:Rest/Item:itemsAround, _format: json }
    methods:  [GET]
    requirements:
        latitude:   "[+-]?\d+(?:[.,]\d*)?|[+-]?[.,]\d+"
        longitude:  "[+-]?\d+(?:[.,]\d*)?|[+-]?[.,]\d+"


## TAGS ########################################################################

give2peer_tags:
    path:     /tags
    defaults: { _controller: Give2PeerBundle:Rest/Tag:indexAlphabetically, _format: json }
    methods:  [GET]


## SOCIAL ACTIONS ##############################################################

give2peer_thank_item:
    path:     /item/{id}/thank
    defaults: { _controller: Give2PeerBundle:Rest/Social:thankForItem, _format: json }
    methods:  [POST]
    requirements:
        id:   \d+


## MODERATION ##################################################################

give2peer_report_item:
    path:     /item/{id}/report
    defaults: { _controller: Give2PeerBundle:Rest/Moderation:reportItem, _format: json }
    methods:  [POST]
    requirements:
        id:   \d+

give2peer_delete_item:  # alias for DELETE item/{id}
    path:     /item/{id}/delete
    defaults: { _controller: Give2PeerBundle:Rest/Item:itemDelete, _format: json }
    methods:  [POST]
    requirements:
        id:   \d+


## STATISTICS ##################################################################

give2peer_stats:
    path:     /stats
    defaults: { _controller: Give2PeerBundle:Rest/Stat:all, _format: json }
    methods:  [GET]
